{
  "address": "0x1A293190Fa8D3e61f8236e251afcd8725FA768C1",
  "abi": [
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0699a633d93fa33ddd8e10521db55c75370fbf5036e7e5d43805357fdc00b129",
  "receipt": {
    "to": null,
    "from": "0x2A2F23ff33671361010D357529BDF0adca9416Fc",
    "contractAddress": "0x1A293190Fa8D3e61f8236e251afcd8725FA768C1",
    "transactionIndex": 0,
    "gasUsed": "577686",
    "logsBloom": "0x
    "blockHash": "0x3e7958f027e1ea7235c3b278d905d5618b428184b8249c31f2d2b27349f0e08b",
    "transactionHash": "0x0699a633d93fa33ddd8e10521db55c75370fbf5036e7e5d43805357fdc00b129",
    "logs": [],
    "blockNumber": 98743440,
    "cumulativeGasUsed": "577686",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "742f3864cb0f4e7b6de01fe6f56ff416",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/misc/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        uint256 gasLimit;\\n        bytes callData;\\n    }\\n    struct Result {\\n        bool success;\\n        uint256 gasUsed;\\n        bytes returnData;\\n    }\\n\\n    function getCurrentBlockTimestamp() external view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n\\n    function getEthBalance(address addr) external view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n\\n    function multicall(Call[] memory calls) external returns (uint256 blockNumber, Result[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new Result[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (address target, bytes memory callData) = (calls[i].target, calls[i].callData);\\n            uint256 gasLeftBefore = gasleft();\\n            (bool success, bytes memory ret) = target.call(callData);\\n            uint256 gasUsed = gasLeftBefore - gasleft();\\n            returnData[i] = Result(success, gasUsed, ret);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3a34825baca3a5f977bc22017bb714ffa1f4ae1aa5d954e5b11aeefc43e008aa\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e31461005b5780634d2301cc1461007c575b600080fd5b425b6040519081526020015b60405180910390f35b61006e61006936600461030e565b6100a4565b6040516100529291906104c7565b61004861008a3660046105a7565b73ffffffffffffffffffffffffffffffffffffffff163190565b8051439060609067ffffffffffffffff8111156100c3576100c361023e565b60405190808252806020026020018201604052801561011057816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100e15790505b50905060005b835181101561023857600080858381518110610134576101346105c9565b602002602001015160000151868481518110610152576101526105c9565b6020026020010151604001519150915060005a90506000808473ffffffffffffffffffffffffffffffffffffffff168460405161018f91906105f8565b6000604051808303816000865af19150503d80600081146101cc576040519150601f19603f3d011682016040523d82523d6000602084013e6101d1565b606091505b509150915060005a6101e39085610643565b90506040518060600160405280841515815260200182815260200183815250888881518110610214576102146105c9565b602002602001018190525050505050505080806102309061065a565b915050610116565b50915091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102905761029061023e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156102dd576102dd61023e565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030957600080fd5b919050565b6000602080838503121561032157600080fd5b823567ffffffffffffffff8082111561033957600080fd5b818501915085601f83011261034d57600080fd5b81358181111561035f5761035f61023e565b8060051b61036e858201610296565b918252838101850191858101908984111561038857600080fd5b86860192505b8383101561048a578235858111156103a65760008081fd5b860160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d0381018213156103dd5760008081fd5b6103e561026d565b6103f08b85016102e5565b81526040848101358c83015292840135928984111561040f5760008081fd5b83850194508e603f86011261042657600093508384fd5b8b85013593508984111561043c5761043c61023e565b61044c8c84601f87011601610296565b92508383528e818587010111156104635760008081fd5b838186018d85013760009383018c019390935291820152835250918601919086019061038e565b9998505050505050505050565b60005b838110156104b257818101518382015260200161049a565b838111156104c1576000848401525b50505050565b6000604080830185845260208281860152818651808452606093508387019150838160051b88010183890160005b83811015610597578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0018552815180511515845286810151878501528801518884018890528051888501819052608061055682828801858c01610497565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016949094019093019250908501906001016104f5565b50909a9950505050505050505050565b6000602082840312156105b957600080fd5b6105c2826102e5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825161060a818460208701610497565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561065557610655610614565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561068c5761068c610614565b506001019056fea26469706673582212201fa31626b0671571d5b23ea168a84aadce69581b5ac94f0cc8b74f7adc78c79064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e31461005b5780634d2301cc1461007c575b600080fd5b425b6040519081526020015b60405180910390f35b61006e61006936600461030e565b6100a4565b6040516100529291906104c7565b61004861008a3660046105a7565b73ffffffffffffffffffffffffffffffffffffffff163190565b8051439060609067ffffffffffffffff8111156100c3576100c361023e565b60405190808252806020026020018201604052801561011057816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100e15790505b50905060005b835181101561023857600080858381518110610134576101346105c9565b602002602001015160000151868481518110610152576101526105c9565b6020026020010151604001519150915060005a90506000808473ffffffffffffffffffffffffffffffffffffffff168460405161018f91906105f8565b6000604051808303816000865af19150503d80600081146101cc576040519150601f19603f3d011682016040523d82523d6000602084013e6101d1565b606091505b509150915060005a6101e39085610643565b90506040518060600160405280841515815260200182815260200183815250888881518110610214576102146105c9565b602002602001018190525050505050505080806102309061065a565b915050610116565b50915091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102905761029061023e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156102dd576102dd61023e565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030957600080fd5b919050565b6000602080838503121561032157600080fd5b823567ffffffffffffffff8082111561033957600080fd5b818501915085601f83011261034d57600080fd5b81358181111561035f5761035f61023e565b8060051b61036e858201610296565b918252838101850191858101908984111561038857600080fd5b86860192505b8383101561048a578235858111156103a65760008081fd5b860160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d0381018213156103dd5760008081fd5b6103e561026d565b6103f08b85016102e5565b81526040848101358c83015292840135928984111561040f5760008081fd5b83850194508e603f86011261042657600093508384fd5b8b85013593508984111561043c5761043c61023e565b61044c8c84601f87011601610296565b92508383528e818587010111156104635760008081fd5b838186018d85013760009383018c019390935291820152835250918601919086019061038e565b9998505050505050505050565b60005b838110156104b257818101518382015260200161049a565b838111156104c1576000848401525b50505050565b6000604080830185845260208281860152818651808452606093508387019150838160051b88010183890160005b83811015610597578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0018552815180511515845286810151878501528801518884018890528051888501819052608061055682828801858c01610497565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016949094019093019250908501906001016104f5565b50909a9950505050505050505050565b6000602082840312156105b957600080fd5b6105c2826102e5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825161060a818460208701610497565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561065557610655610614565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561068c5761068c610614565b506001019056fea26469706673582212201fa31626b0671571d5b23ea168a84aadce69581b5ac94f0cc8b74f7adc78c79064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}