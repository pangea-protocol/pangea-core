{
  "address": "0xFF3e7cf0C007f919807b32b30a4a9E7Bd7Bc4121",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deploymentChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "depositToAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb208607a36097d496dcd543afca995fee30d730251015351a824158712e44c37",
  "receipt": {
    "to": null,
    "from": "0x2A2F23ff33671361010D357529BDF0adca9416Fc",
    "contractAddress": "0xFF3e7cf0C007f919807b32b30a4a9E7Bd7Bc4121",
    "transactionIndex": 2,
    "gasUsed": "2936858",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0bc92e23319a3274bbad74d9e6329f6b72f2f04004e7fd28029993c020b5b6fd",
    "transactionHash": "0xb208607a36097d496dcd543afca995fee30d730251015351a824158712e44c37",
    "logs": [],
    "blockNumber": 98743388,
    "cumulativeGasUsed": "3057333",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7b141dad0ae9dd0a2ec46a2e595f9ebb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploymentChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"depositToAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the balance of ETH deposited minus the ETH withdrawn with that specific wallet.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Return the DOMAIN_SEPARATOR.\"},\"approve(address,uint256)\":{\"details\":\"Sets `value` as allowance of `spender` account over caller account's WETH10 token. Emits {Approval} event. Returns boolean value indicating whether operation succeeded.\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets `value` as allowance of `spender` account over caller account's WETH10 token, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Approval} event. Returns boolean value indicating whether operation succeeded. For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"deposit()\":{\"details\":\"`msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\"},\"depositTo(address)\":{\"details\":\"`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account.\"},\"depositToAndCall(address,bytes)\":{\"details\":\"`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as allowance of `spender` account over `owner` account's WETH10 token, given `owner` account's signed approval. Emits {Approval} event. Requirements:   - `deadline` must be timestamp in future.   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.   - the signature must use `owner` account's current nonce (see {nonces}).   - the signer cannot be `address(0)` and must be `owner` account. For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. WETH10 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol.\"},\"totalSupply()\":{\"details\":\"Returns the total supply of WETH10 token as the ETH held in this contract.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `value` WETH10 token from caller's account to account (`to`). A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves `value` WETH10 token from caller's account to account (`to`), after which a call is executed to an ERC677-compliant contract with the `data` parameter. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `value` WETH10 token from account (`from`) to account (`to`) using allowance mechanism. `value` is then deducted from caller account's allowance, unless set to `type(uint256).max`. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\"},\"withdraw(uint256)\":{\"details\":\"Burn `value` WETH10 token from caller account and withdraw matching ETH to the same. Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token.\"},\"withdrawFrom(address,address,uint256)\":{\"details\":\"Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`). Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`). Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\"},\"withdrawTo(address,uint256)\":{\"details\":\"Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`). Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Records number of WETH10 token that account (second) will be allowed to spend on behalf of another account (first) through {transferFrom}.\"},\"balanceOf\":{\"details\":\"Records amount of WETH10 token owned by account.\"},\"nonces\":{\"details\":\"Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}. Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/WETH/WETH10.sol\":\"WETH10\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/misc/WETH/WETH10.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// Copyright (C) 2015, 2016, 2017 Dapphub\\n// Adapted by Ethereum Community 2021\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./interfaces/IWETH10.sol\\\";\\n\\ninterface ITransferReceiver {\\n    function onTokenTransfer(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external returns (bool);\\n}\\n\\ninterface IApprovalReceiver {\\n    function onTokenApproval(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external returns (bool);\\n}\\n\\n/// @dev Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can\\n/// `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the\\n/// balance of ETH deposited minus the ETH withdrawn with that specific wallet.\\ncontract WETH10 is IWETH10 {\\n    string public constant name = \\\"Wrapped KLAY v10\\\";\\n    string public constant symbol = \\\"WKLAY\\\";\\n    uint8 public constant decimals = 18;\\n\\n    bytes32 public immutable PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    uint256 public immutable deploymentChainId;\\n    bytes32 private immutable _DOMAIN_SEPARATOR;\\n\\n    /// @dev Records amount of WETH10 token owned by account.\\n    mapping(address => uint256) public override balanceOf;\\n\\n    /// @dev Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}.\\n    /// Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times.\\n    mapping(address => uint256) public override nonces;\\n\\n    /// @dev Records number of WETH10 token that account (second) will be allowed to spend on behalf of another account (first) through {transferFrom}.\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    constructor() {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        deploymentChainId = chainId;\\n        _DOMAIN_SEPARATOR = _calculateDomainSeparator(chainId);\\n    }\\n\\n    /// @dev Calculate the DOMAIN_SEPARATOR.\\n    function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(\\\"1\\\")),\\n                    chainId,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /// @dev Return the DOMAIN_SEPARATOR.\\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId == deploymentChainId ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId);\\n    }\\n\\n    /// @dev Returns the total supply of WETH10 token as the ETH held in this contract.\\n    function totalSupply() external view override returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    /// @dev Fallback, `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\\n    receive() external payable {\\n        // _mintTo(msg.sender, msg.value);\\n        balanceOf[msg.sender] += msg.value;\\n        emit Transfer(address(0), msg.sender, msg.value);\\n    }\\n\\n    /// @dev `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\\n    function deposit() external payable override {\\n        // _mintTo(msg.sender, msg.value);\\n        balanceOf[msg.sender] += msg.value;\\n        emit Transfer(address(0), msg.sender, msg.value);\\n    }\\n\\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance.\\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account.\\n    function depositTo(address to) external payable override {\\n        // _mintTo(to, msg.value);\\n        balanceOf[to] += msg.value;\\n        emit Transfer(address(0), to, msg.value);\\n    }\\n\\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance,\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function depositToAndCall(address to, bytes calldata data) external payable override returns (bool success) {\\n        // _mintTo(to, msg.value);\\n        balanceOf[to] += msg.value;\\n        emit Transfer(address(0), to, msg.value);\\n\\n        return ITransferReceiver(to).onTokenTransfer(msg.sender, msg.value, data);\\n    }\\n\\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to the same.\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` balance of WETH10 token.\\n    function withdraw(uint256 value) external override {\\n        // _burnFrom(msg.sender, value);\\n        uint256 balance = balanceOf[msg.sender];\\n        require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n        balanceOf[msg.sender] = balance - value;\\n        emit Transfer(msg.sender, address(0), value);\\n\\n        // _transferEther(msg.sender, value);\\n        (bool success, ) = msg.sender.call{value: value}(\\\"\\\");\\n        require(success, \\\"WETH: ETH transfer failed\\\");\\n    }\\n\\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`).\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` balance of WETH10 token.\\n    function withdrawTo(address payable to, uint256 value) external override {\\n        // _burnFrom(msg.sender, value);\\n        uint256 balance = balanceOf[msg.sender];\\n        require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n        balanceOf[msg.sender] = balance - value;\\n        emit Transfer(msg.sender, address(0), value);\\n\\n        // _transferEther(to, value);\\n        (bool success, ) = to.call{value: value}(\\\"\\\");\\n        require(success, \\\"WETH: ETH transfer failed\\\");\\n    }\\n\\n    /// @dev Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`).\\n    /// Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\\n    /// unless allowance is set to `type(uint256).max`\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`).\\n    /// Requirements:\\n    ///   - `from` account must have at least `value` balance of WETH10 token.\\n    ///   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\\n    function withdrawFrom(\\n        address from,\\n        address payable to,\\n        uint256 value\\n    ) external override {\\n        if (from != msg.sender) {\\n            // _decreaseAllowance(from, msg.sender, value);\\n            uint256 allowed = allowance[from][msg.sender];\\n            if (allowed != type(uint256).max) {\\n                require(allowed >= value, \\\"WETH: request exceeds allowance\\\");\\n                uint256 reduced = allowed - value;\\n                allowance[from][msg.sender] = reduced;\\n                emit Approval(from, msg.sender, reduced);\\n            }\\n        }\\n\\n        // _burnFrom(from, value);\\n        uint256 balance = balanceOf[from];\\n        require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n        balanceOf[from] = balance - value;\\n        emit Transfer(from, address(0), value);\\n\\n        // _transferEther(to, value);\\n        (bool success, ) = to.call{value: value}(\\\"\\\");\\n        require(success, \\\"WETH: Ether transfer failed\\\");\\n    }\\n\\n    /// @dev Sets `value` as allowance of `spender` account over caller account's WETH10 token.\\n    /// Emits {Approval} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    function approve(address spender, uint256 value) external override returns (bool) {\\n        // _approve(msg.sender, spender, value);\\n        allowance[msg.sender][spender] = value;\\n        emit Approval(msg.sender, spender, value);\\n\\n        return true;\\n    }\\n\\n    /// @dev Sets `value` as allowance of `spender` account over caller account's WETH10 token,\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// Emits {Approval} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function approveAndCall(\\n        address spender,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override returns (bool) {\\n        // _approve(msg.sender, spender, value);\\n        allowance[msg.sender][spender] = value;\\n        emit Approval(msg.sender, spender, value);\\n\\n        return IApprovalReceiver(spender).onTokenApproval(msg.sender, value, data);\\n    }\\n\\n    /// @dev Sets `value` as allowance of `spender` account over `owner` account's WETH10 token, given `owner` account's signed approval.\\n    /// Emits {Approval} event.\\n    /// Requirements:\\n    ///   - `deadline` must be timestamp in future.\\n    ///   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.\\n    ///   - the signature must use `owner` account's current nonce (see {nonces}).\\n    ///   - the signer cannot be `address(0)` and must be `owner` account.\\n    /// For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\\n    /// WETH10 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        require(block.timestamp <= deadline, \\\"WETH: Expired permit\\\");\\n\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n\\n        bytes32 hashStruct = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline));\\n\\n        bytes32 hash = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", chainId == deploymentChainId ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId), hashStruct)\\n        );\\n\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0) && signer == owner, \\\"WETH: invalid permit\\\");\\n\\n        // _approve(owner, spender, value);\\n        allowance[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /// @dev Moves `value` WETH10 token from caller's account to account (`to`).\\n    /// A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` WETH10 token.\\n    function transfer(address to, uint256 value) external override returns (bool) {\\n        // _transferFrom(msg.sender, to, value);\\n        if (to != address(0)) {\\n            // Transfer\\n            uint256 balance = balanceOf[msg.sender];\\n            require(balance >= value, \\\"WETH: transfer amount exceeds balance\\\");\\n\\n            balanceOf[msg.sender] = balance - value;\\n            balanceOf[to] += value;\\n            emit Transfer(msg.sender, to, value);\\n        } else {\\n            // Withdraw\\n            uint256 balance = balanceOf[msg.sender];\\n            require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n            balanceOf[msg.sender] = balance - value;\\n            emit Transfer(msg.sender, address(0), value);\\n\\n            (bool success, ) = msg.sender.call{value: value}(\\\"\\\");\\n            require(success, \\\"WETH: ETH transfer failed\\\");\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @dev Moves `value` WETH10 token from account (`from`) to account (`to`) using allowance mechanism.\\n    /// `value` is then deducted from caller account's allowance, unless set to `type(uint256).max`.\\n    /// A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\\n    /// Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\\n    /// unless allowance is set to `type(uint256).max`\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// Requirements:\\n    ///   - `from` account must have at least `value` balance of WETH10 token.\\n    ///   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external override returns (bool) {\\n        if (from != msg.sender) {\\n            // _decreaseAllowance(from, msg.sender, value);\\n            uint256 allowed = allowance[from][msg.sender];\\n            if (allowed != type(uint256).max) {\\n                require(allowed >= value, \\\"WETH: request exceeds allowance\\\");\\n                uint256 reduced = allowed - value;\\n                allowance[from][msg.sender] = reduced;\\n                emit Approval(from, msg.sender, reduced);\\n            }\\n        }\\n\\n        // _transferFrom(from, to, value);\\n        if (to != address(0)) {\\n            // Transfer\\n            uint256 balance = balanceOf[from];\\n            require(balance >= value, \\\"WETH: transfer amount exceeds balance\\\");\\n\\n            balanceOf[from] = balance - value;\\n            balanceOf[to] += value;\\n            emit Transfer(from, to, value);\\n        } else {\\n            // Withdraw\\n            uint256 balance = balanceOf[from];\\n            require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n            balanceOf[from] = balance - value;\\n            emit Transfer(from, address(0), value);\\n\\n            (bool success, ) = msg.sender.call{value: value}(\\\"\\\");\\n            require(success, \\\"WETH: ETH transfer failed\\\");\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @dev Moves `value` WETH10 token from caller's account to account (`to`),\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` WETH10 token.\\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function transferAndCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override returns (bool) {\\n        // _transferFrom(msg.sender, to, value);\\n        if (to != address(0)) {\\n            // Transfer\\n            uint256 balance = balanceOf[msg.sender];\\n            require(balance >= value, \\\"WETH: transfer amount exceeds balance\\\");\\n\\n            balanceOf[msg.sender] = balance - value;\\n            balanceOf[to] += value;\\n            emit Transfer(msg.sender, to, value);\\n        } else {\\n            // Withdraw\\n            uint256 balance = balanceOf[msg.sender];\\n            require(balance >= value, \\\"WETH: burn amount exceeds balance\\\");\\n            balanceOf[msg.sender] = balance - value;\\n            emit Transfer(msg.sender, address(0), value);\\n\\n            (bool success, ) = msg.sender.call{value: value}(\\\"\\\");\\n            require(success, \\\"WETH: ETH transfer failed\\\");\\n        }\\n\\n        return ITransferReceiver(to).onTokenTransfer(msg.sender, value, data);\\n    }\\n}\\n\",\"keccak256\":\"0xe94b846b6797af78c64cbb8c0fa163fff477603fbd08d01cfb82663ac9fe7d81\",\"license\":\"GPL-3.0-or-later\"},\"contracts/misc/WETH/interfaces/IERC2612.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC2612 standard as defined in the EIP.\\n *\\n * Adds the {permit} method, which can be used to change one's\\n * {IERC20-allowance} without having to send a transaction, by signing a\\n * message. This allows users to spend tokens without having to hold Ether.\\n *\\n * See https://eips.ethereum.org/EIPS/eip-2612.\\n */\\ninterface IERC2612 {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be `address(0)`.\\n     * - `spender` cannot be `address(0)`.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use `owner`'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases `owner`'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by EIP712.\\n     */\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x59b83aad527f1036f88d4849ece583823a0bdd1bb7e30d01fba40480895f8a72\",\"license\":\"GPL-3.0-or-later\"},\"contracts/misc/WETH/interfaces/IWETH10.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// Copyright (C) 2015, 2016, 2017 Dapphub\\n// Adapted by Ethereum Community 2021\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IERC2612.sol\\\";\\n\\n/// @dev Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can\\n/// `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the\\n/// balance of ETH deposited minus the ETH withdrawn with that specific wallet.\\ninterface IWETH10 is IERC20, IERC2612 {\\n    /// @dev `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\\n    function deposit() external payable;\\n\\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance.\\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account.\\n    function depositTo(address to) external payable;\\n\\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to the same.\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` balance of WETH10 token.\\n    function withdraw(uint256 value) external;\\n\\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`).\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` balance of WETH10 token.\\n    function withdrawTo(address payable to, uint256 value) external;\\n\\n    /// @dev Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`).\\n    /// Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\\n    /// unless allowance is set to `type(uint256).max`\\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`).\\n    /// Requirements:\\n    ///   - `from` account must have at least `value` balance of WETH10 token.\\n    ///   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\\n    function withdrawFrom(\\n        address from,\\n        address payable to,\\n        uint256 value\\n    ) external;\\n\\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance,\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function depositToAndCall(address to, bytes calldata data) external payable returns (bool);\\n\\n    /// @dev Sets `value` as allowance of `spender` account over caller account's WETH10 token,\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// Emits {Approval} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function approveAndCall(\\n        address spender,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool);\\n\\n    /// @dev Moves `value` WETH10 token from caller's account to account (`to`),\\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\\n    /// A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\\n    /// Emits {Transfer} event.\\n    /// Returns boolean value indicating whether operation succeeded.\\n    /// Requirements:\\n    ///   - caller account must have at least `value` WETH10 token.\\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\\n    function transferAndCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x254f20af85db716ebf5cda0525bbb96a67f2724592df114ec720964cd461f758\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960805234801561003457600080fd5b504660a0818152604080518082018252601081526f057726170706564204b4c4159207631360841b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f6ba9313af671398349b7f8716558a1ca76220a96b6163172d2cd209ab689868b818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201526080810185905230818501528251808203909401845260c001909152815191012060c0525060805160a05160c05161251261015860003960008181610f190152611e8b0152600081816104ba01528181610def0152611d610152600081816103010152611ccc01526125126000f3fe6080604052600436106101795760003560e01c806370a08231116100cb578063b760faf91161007f578063d0e30db011610059578063d0e30db0146104dc578063d505accf146104e4578063dd62ed3e1461050457600080fd5b8063b760faf914610475578063cae9ca5114610488578063cd0d0096146104a857600080fd5b80639555a942116100b05780639555a942146103ec57806395d89b411461040c578063a9059cbb1461045557600080fd5b806370a08231146103925780637ecebe00146103bf57600080fd5b80632e1a7d4d1161012d5780633644e515116101075780633644e5151461034a5780634000aea01461035f5780635ddb7d7e1461037f57600080fd5b80632e1a7d4d146102cf57806330adf81f146102ef578063313ce5671461032357600080fd5b806318160ddd1161015e57806318160ddd14610270578063205c28781461028d57806323b872dd146102af57600080fd5b806306fdde03146101e1578063095ea7b31461024057600080fd5b366101dc57336000908152602081905260408120805434929061019d9084906120f5565b909155505060405134815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3005b600080fd5b3480156101ed57600080fd5b5061022a6040518060400160405280601081526020017f57726170706564204b4c4159207631300000000000000000000000000000000081525081565b604051610237919061210d565b60405180910390f35b34801561024c57600080fd5b5061026061025b3660046121a5565b61053c565b6040519015158152602001610237565b34801561027c57600080fd5b50475b604051908152602001610237565b34801561029957600080fd5b506102ad6102a83660046121a5565b6105b5565b005b3480156102bb57600080fd5b506102606102ca3660046121d1565b61077a565b3480156102db57600080fd5b506102ad6102ea366004612212565b610c43565b3480156102fb57600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561032f57600080fd5b50610338601281565b60405160ff9091168152602001610237565b34801561035657600080fd5b5061027f610dea565b34801561036b57600080fd5b5061026061037a366004612274565b610f3f565b61026061038d3660046122d0565b6112f7565b34801561039e57600080fd5b5061027f6103ad366004612325565b60006020819052908152604090205481565b3480156103cb57600080fd5b5061027f6103da366004612325565b60016020526000908152604090205481565b3480156103f857600080fd5b506102ad6104073660046121d1565b611433565b34801561041857600080fd5b5061022a6040518060400160405280600581526020017f574b4c415900000000000000000000000000000000000000000000000000000081525081565b34801561046157600080fd5b506102606104703660046121a5565b611779565b6102ad610483366004612325565b611a87565b34801561049457600080fd5b506102606104a3366004612274565b611b12565b3480156104b457600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b6102ad611bd8565b3480156104f057600080fd5b506102ad6104ff366004612349565b611c36565b34801561051057600080fd5b5061027f61051f3660046123c0565b600260209081526000928352604080842090915290825290205481565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105a49086815260200190565b60405180910390a350600192915050565b336000908152602081905260409020548181101561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61066482826123f9565b3360008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114610704576040519150601f19603f3d011682016040523d82523d6000602084013e610709565b606091505b5050905080610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff841633146108d55773ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108d3578281101561085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f574554483a2072657175657374206578636565647320616c6c6f77616e6365006044820152606401610651565b600061086784836123f9565b73ffffffffffffffffffffffffffffffffffffffff8716600081815260026020908152604080832033808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b505b73ffffffffffffffffffffffffffffffffffffffff831615610a685773ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054828110156109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b6109b183826123f9565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526020819052604080822093909355908616815290812080548592906109f49084906120f5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a5a91815260200190565b60405180910390a350610c39565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090205482811015610b1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b610b2883826123f9565b73ffffffffffffffffffffffffffffffffffffffff861660008181526020818152604080832094909455925186815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339085908381818185875af1925050503d8060008114610bc6576040519150601f19603f3d011682016040523d82523d6000602084013e610bcb565b606091505b5050905080610c36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b5060019392505050565b3360009081526020819052604090205481811015610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b610ced82826123f9565b3360008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339084908381818185875af1925050503d8060008114610d75576040519150601f19603f3d011682016040523d82523d6000602084013e610d7a565b606091505b5050905080610de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b505050565b6000467f00000000000000000000000000000000000000000000000000000000000000008114610f1757604080518082018252601081527f57726170706564204b4c4159207631300000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f6ba9313af671398349b7f8716558a1ca76220a96b6163172d2cd209ab689868b818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018490523060a0808301919091528351808303909101815260c09091019092528151910120610f39565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600073ffffffffffffffffffffffffffffffffffffffff85161561109f573360009081526020819052604090205484811015610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b61100785826123f9565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8816815290812080548792906110479084906120f5565b909155505060405185815273ffffffffffffffffffffffffffffffffffffffff87169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350611244565b336000908152602081905260409020548481101561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61114985826123f9565b3360008181526020818152604080832094909455925188815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339087908381818185875af1925050503d80600081146111d1576040519150601f19603f3d011682016040523d82523d6000602084013e6111d6565b606091505b5050905080611241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b6040517fa4c0ed3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063a4c0ed369061129c903390889088908890600401612410565b602060405180830381600087803b1580156112b657600080fd5b505af11580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190612481565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208054349190839061132e9084906120f5565b909155505060405134815273ffffffffffffffffffffffffffffffffffffffff8516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040517fa4c0ed3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a4c0ed36906113d9903390349088908890600401612410565b602060405180830381600087803b1580156113f357600080fd5b505af1158015611407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190612481565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8316331461158c5773ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461158a5781811015611512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f574554483a2072657175657374206578636565647320616c6c6f77616e6365006044820152606401610651565b600061151e83836123f9565b73ffffffffffffffffffffffffffffffffffffffff8616600081815260026020908152604080832033808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b505b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61164c82826123f9565b73ffffffffffffffffffffffffffffffffffffffff851660008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114611702576040519150601f19603f3d011682016040523d82523d6000602084013e611707565b606091505b5050905080611772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f574554483a204574686572207472616e73666572206661696c656400000000006044820152606401610651565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff8316156118d9573360009081526020819052604090205482811015611837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b61184183826123f9565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8616815290812080548592906118819084906120f5565b909155505060405183815273ffffffffffffffffffffffffffffffffffffffff85169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350611a7e565b3360009081526020819052604090205482811015611979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61198383826123f9565b3360008181526020818152604080832094909455925186815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339085908381818185875af1925050503d8060008114611a0b576040519150601f19603f3d011682016040523d82523d6000602084013e611a10565b606091505b5050905080611a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081208054349290611abc9084906120f5565b909155505060405134815273ffffffffffffffffffffffffffffffffffffffff8216906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8916808552925280832087905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611b7a9088815260200190565b60405180910390a36040517eba451f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169062ba451f9061129c903390889088908890600401612410565b3360009081526020819052604081208054349290611bf79084906120f5565b909155505060405134815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3565b83421115611ca0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f574554483a2045787069726564207065726d69740000000000000000000000006044820152606401610651565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260016020526040812080544692917f0000000000000000000000000000000000000000000000000000000000000000918b918b918b9186611cfc836124a3565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f00000000000000000000000000000000000000000000000000000000000000008314611e8957604080518082018252601081527f57726170706564204b4c4159207631300000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f6ba9313af671398349b7f8716558a1ca76220a96b6163172d2cd209ab689868b818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018690523060a0808301919091528351808303909101815260c09091019092528151910120611eab565b7f00000000000000000000000000000000000000000000000000000000000000005b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019190915260428101839052606201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611f6f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611fea57508a73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f574554483a20696e76616c6964207065726d69740000000000000000000000006044820152606401610651565b73ffffffffffffffffffffffffffffffffffffffff8b81166000818152600260209081526040808320948f16808452948252918290208d905590518c81527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612108576121086120c6565b500190565b600060208083528351808285015260005b8181101561213a5785810183015185820160400152820161211e565b8181111561214c576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146121a257600080fd5b50565b600080604083850312156121b857600080fd5b82356121c381612180565b946020939093013593505050565b6000806000606084860312156121e657600080fd5b83356121f181612180565b9250602084013561220181612180565b929592945050506040919091013590565b60006020828403121561222457600080fd5b5035919050565b60008083601f84011261223d57600080fd5b50813567ffffffffffffffff81111561225557600080fd5b60208301915083602082850101111561226d57600080fd5b9250929050565b6000806000806060858703121561228a57600080fd5b843561229581612180565b935060208501359250604085013567ffffffffffffffff8111156122b857600080fd5b6122c48782880161222b565b95989497509550505050565b6000806000604084860312156122e557600080fd5b83356122f081612180565b9250602084013567ffffffffffffffff81111561230c57600080fd5b6123188682870161222b565b9497909650939450505050565b60006020828403121561233757600080fd5b813561234281612180565b9392505050565b600080600080600080600060e0888a03121561236457600080fd5b873561236f81612180565b9650602088013561237f81612180565b95506040880135945060608801359350608088013560ff811681146123a357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156123d357600080fd5b82356123de81612180565b915060208301356123ee81612180565b809150509250929050565b60008282101561240b5761240b6120c6565b500390565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b60006020828403121561249357600080fd5b8151801515811461234257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124d5576124d56120c6565b506001019056fea2646970667358221220bbcd1be036089767bac673802aa96a8ce732d4a4461e4afd90d51ac8caacb50664736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106101795760003560e01c806370a08231116100cb578063b760faf91161007f578063d0e30db011610059578063d0e30db0146104dc578063d505accf146104e4578063dd62ed3e1461050457600080fd5b8063b760faf914610475578063cae9ca5114610488578063cd0d0096146104a857600080fd5b80639555a942116100b05780639555a942146103ec57806395d89b411461040c578063a9059cbb1461045557600080fd5b806370a08231146103925780637ecebe00146103bf57600080fd5b80632e1a7d4d1161012d5780633644e515116101075780633644e5151461034a5780634000aea01461035f5780635ddb7d7e1461037f57600080fd5b80632e1a7d4d146102cf57806330adf81f146102ef578063313ce5671461032357600080fd5b806318160ddd1161015e57806318160ddd14610270578063205c28781461028d57806323b872dd146102af57600080fd5b806306fdde03146101e1578063095ea7b31461024057600080fd5b366101dc57336000908152602081905260408120805434929061019d9084906120f5565b909155505060405134815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3005b600080fd5b3480156101ed57600080fd5b5061022a6040518060400160405280601081526020017f57726170706564204b4c4159207631300000000000000000000000000000000081525081565b604051610237919061210d565b60405180910390f35b34801561024c57600080fd5b5061026061025b3660046121a5565b61053c565b6040519015158152602001610237565b34801561027c57600080fd5b50475b604051908152602001610237565b34801561029957600080fd5b506102ad6102a83660046121a5565b6105b5565b005b3480156102bb57600080fd5b506102606102ca3660046121d1565b61077a565b3480156102db57600080fd5b506102ad6102ea366004612212565b610c43565b3480156102fb57600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561032f57600080fd5b50610338601281565b60405160ff9091168152602001610237565b34801561035657600080fd5b5061027f610dea565b34801561036b57600080fd5b5061026061037a366004612274565b610f3f565b61026061038d3660046122d0565b6112f7565b34801561039e57600080fd5b5061027f6103ad366004612325565b60006020819052908152604090205481565b3480156103cb57600080fd5b5061027f6103da366004612325565b60016020526000908152604090205481565b3480156103f857600080fd5b506102ad6104073660046121d1565b611433565b34801561041857600080fd5b5061022a6040518060400160405280600581526020017f574b4c415900000000000000000000000000000000000000000000000000000081525081565b34801561046157600080fd5b506102606104703660046121a5565b611779565b6102ad610483366004612325565b611a87565b34801561049457600080fd5b506102606104a3366004612274565b611b12565b3480156104b457600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b6102ad611bd8565b3480156104f057600080fd5b506102ad6104ff366004612349565b611c36565b34801561051057600080fd5b5061027f61051f3660046123c0565b600260209081526000928352604080842090915290825290205481565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105a49086815260200190565b60405180910390a350600192915050565b336000908152602081905260409020548181101561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61066482826123f9565b3360008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114610704576040519150601f19603f3d011682016040523d82523d6000602084013e610709565b606091505b5050905080610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff841633146108d55773ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108d3578281101561085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f574554483a2072657175657374206578636565647320616c6c6f77616e6365006044820152606401610651565b600061086784836123f9565b73ffffffffffffffffffffffffffffffffffffffff8716600081815260026020908152604080832033808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b505b73ffffffffffffffffffffffffffffffffffffffff831615610a685773ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054828110156109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b6109b183826123f9565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526020819052604080822093909355908616815290812080548592906109f49084906120f5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a5a91815260200190565b60405180910390a350610c39565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090205482811015610b1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b610b2883826123f9565b73ffffffffffffffffffffffffffffffffffffffff861660008181526020818152604080832094909455925186815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339085908381818185875af1925050503d8060008114610bc6576040519150601f19603f3d011682016040523d82523d6000602084013e610bcb565b606091505b5050905080610c36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b5060019392505050565b3360009081526020819052604090205481811015610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b610ced82826123f9565b3360008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339084908381818185875af1925050503d8060008114610d75576040519150601f19603f3d011682016040523d82523d6000602084013e610d7a565b606091505b5050905080610de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b505050565b6000467f00000000000000000000000000000000000000000000000000000000000000008114610f1757604080518082018252601081527f57726170706564204b4c4159207631300000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f6ba9313af671398349b7f8716558a1ca76220a96b6163172d2cd209ab689868b818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018490523060a0808301919091528351808303909101815260c09091019092528151910120610f39565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600073ffffffffffffffffffffffffffffffffffffffff85161561109f573360009081526020819052604090205484811015610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b61100785826123f9565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8816815290812080548792906110479084906120f5565b909155505060405185815273ffffffffffffffffffffffffffffffffffffffff87169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350611244565b336000908152602081905260409020548481101561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61114985826123f9565b3360008181526020818152604080832094909455925188815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339087908381818185875af1925050503d80600081146111d1576040519150601f19603f3d011682016040523d82523d6000602084013e6111d6565b606091505b5050905080611241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b6040517fa4c0ed3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063a4c0ed369061129c903390889088908890600401612410565b602060405180830381600087803b1580156112b657600080fd5b505af11580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190612481565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208054349190839061132e9084906120f5565b909155505060405134815273ffffffffffffffffffffffffffffffffffffffff8516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040517fa4c0ed3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a4c0ed36906113d9903390349088908890600401612410565b602060405180830381600087803b1580156113f357600080fd5b505af1158015611407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190612481565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8316331461158c5773ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461158a5781811015611512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f574554483a2072657175657374206578636565647320616c6c6f77616e6365006044820152606401610651565b600061151e83836123f9565b73ffffffffffffffffffffffffffffffffffffffff8616600081815260026020908152604080832033808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b505b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61164c82826123f9565b73ffffffffffffffffffffffffffffffffffffffff851660008181526020818152604080832094909455925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114611702576040519150601f19603f3d011682016040523d82523d6000602084013e611707565b606091505b5050905080611772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f574554483a204574686572207472616e73666572206661696c656400000000006044820152606401610651565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff8316156118d9573360009081526020819052604090205482811015611837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e63650000000000000000000000000000000000000000000000000000006064820152608401610651565b61184183826123f9565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8616815290812080548592906118819084906120f5565b909155505060405183815273ffffffffffffffffffffffffffffffffffffffff85169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350611a7e565b3360009081526020819052604090205482811015611979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b61198383826123f9565b3360008181526020818152604080832094909455925186815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3604051600090339085908381818185875af1925050503d8060008114611a0b576040519150601f19603f3d011682016040523d82523d6000602084013e611a10565b606091505b5050905080611a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610651565b50505b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081208054349290611abc9084906120f5565b909155505060405134815273ffffffffffffffffffffffffffffffffffffffff8216906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8916808552925280832087905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611b7a9088815260200190565b60405180910390a36040517eba451f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169062ba451f9061129c903390889088908890600401612410565b3360009081526020819052604081208054349290611bf79084906120f5565b909155505060405134815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3565b83421115611ca0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f574554483a2045787069726564207065726d69740000000000000000000000006044820152606401610651565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260016020526040812080544692917f0000000000000000000000000000000000000000000000000000000000000000918b918b918b9186611cfc836124a3565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f00000000000000000000000000000000000000000000000000000000000000008314611e8957604080518082018252601081527f57726170706564204b4c4159207631300000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f6ba9313af671398349b7f8716558a1ca76220a96b6163172d2cd209ab689868b818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018690523060a0808301919091528351808303909101815260c09091019092528151910120611eab565b7f00000000000000000000000000000000000000000000000000000000000000005b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019190915260428101839052606201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611f6f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611fea57508a73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f574554483a20696e76616c6964207065726d69740000000000000000000000006044820152606401610651565b73ffffffffffffffffffffffffffffffffffffffff8b81166000818152600260209081526040808320948f16808452948252918290208d905590518c81527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612108576121086120c6565b500190565b600060208083528351808285015260005b8181101561213a5785810183015185820160400152820161211e565b8181111561214c576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146121a257600080fd5b50565b600080604083850312156121b857600080fd5b82356121c381612180565b946020939093013593505050565b6000806000606084860312156121e657600080fd5b83356121f181612180565b9250602084013561220181612180565b929592945050506040919091013590565b60006020828403121561222457600080fd5b5035919050565b60008083601f84011261223d57600080fd5b50813567ffffffffffffffff81111561225557600080fd5b60208301915083602082850101111561226d57600080fd5b9250929050565b6000806000806060858703121561228a57600080fd5b843561229581612180565b935060208501359250604085013567ffffffffffffffff8111156122b857600080fd5b6122c48782880161222b565b95989497509550505050565b6000806000604084860312156122e557600080fd5b83356122f081612180565b9250602084013567ffffffffffffffff81111561230c57600080fd5b6123188682870161222b565b9497909650939450505050565b60006020828403121561233757600080fd5b813561234281612180565b9392505050565b600080600080600080600060e0888a03121561236457600080fd5b873561236f81612180565b9650602088013561237f81612180565b95506040880135945060608801359350608088013560ff811681146123a357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156123d357600080fd5b82356123de81612180565b915060208301356123ee81612180565b809150509250929050565b60008282101561240b5761240b6120c6565b500390565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b60006020828403121561249357600080fd5b8151801515811461234257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124d5576124d56120c6565b506001019056fea2646970667358221220bbcd1be036089767bac673802aa96a8ce732d4a4461e4afd90d51ac8caacb50664736f6c63430008090033",
  "devdoc": {
    "details": "Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the balance of ETH deposited minus the ETH withdrawn with that specific wallet.",
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Return the DOMAIN_SEPARATOR."
      },
      "approve(address,uint256)": {
        "details": "Sets `value` as allowance of `spender` account over caller account's WETH10 token. Emits {Approval} event. Returns boolean value indicating whether operation succeeded."
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Sets `value` as allowance of `spender` account over caller account's WETH10 token, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Approval} event. Returns boolean value indicating whether operation succeeded. For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "deposit()": {
        "details": "`msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account."
      },
      "depositTo(address)": {
        "details": "`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account."
      },
      "depositToAndCall(address,bytes)": {
        "details": "`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as allowance of `spender` account over `owner` account's WETH10 token, given `owner` account's signed approval. Emits {Approval} event. Requirements:   - `deadline` must be timestamp in future.   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.   - the signature must use `owner` account's current nonce (see {nonces}).   - the signer cannot be `address(0)` and must be `owner` account. For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. WETH10 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol."
      },
      "totalSupply()": {
        "details": "Returns the total supply of WETH10 token as the ETH held in this contract."
      },
      "transfer(address,uint256)": {
        "details": "Moves `value` WETH10 token from caller's account to account (`to`). A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Moves `value` WETH10 token from caller's account to account (`to`), after which a call is executed to an ERC677-compliant contract with the `data` parameter. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `value` WETH10 token from account (`from`) to account (`to`) using allowance mechanism. `value` is then deducted from caller account's allowance, unless set to `type(uint256).max`. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account."
      },
      "withdraw(uint256)": {
        "details": "Burn `value` WETH10 token from caller account and withdraw matching ETH to the same. Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token."
      },
      "withdrawFrom(address,address,uint256)": {
        "details": "Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`). Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`). Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account."
      },
      "withdrawTo(address,uint256)": {
        "details": "Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`). Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Records number of WETH10 token that account (second) will be allowed to spend on behalf of another account (first) through {transferFrom}."
      },
      "balanceOf": {
        "details": "Records amount of WETH10 token owned by account."
      },
      "nonces": {
        "details": "Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}. Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11329,
        "contract": "contracts/misc/WETH/WETH10.sol:WETH10",
        "label": "balanceOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 11335,
        "contract": "contracts/misc/WETH/WETH10.sol:WETH10",
        "label": "nonces",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 11343,
        "contract": "contracts/misc/WETH/WETH10.sol:WETH10",
        "label": "allowance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}